#Project Builder
#General
CC = gcc
CPPFLAGS = -Wall -Wextra -g -pedantic
CPPLDFLAGS = -lstdc++ -lcrypto -lssl -lpthread -lsqlite3

all: run-server

#Thread libs builder

THREAD_LDFLAGS = 

THREAD_LIBS = Thread.o Mutex.o

Thread.o: libs/wrappers/Thread.h libs/wrappers/Thread.cpp
		$(CC) $(CPPFLAGS) -c libs/wrappers/Thread.cpp
		
Mutex.o: libs/wrappers/Mutex.h libs/wrappers/Mutex.cpp
		$(CC) $(CPPFLAGS) -c libs/wrappers/Mutex.cpp
		
#Sockets libs builder 

SOCKET_LIBS = Socket.o

Socket.o: libs/wrappers/Socket.h libs/wrappers/Socket.cpp
	$(CC) $(CPPFLAGS) -c libs/wrappers/Socket.cpp
	
#Messages libs builder

MESSAGES_LIBS = MsgInterpreter.o

MsgInterpreter.o: libs/messages/MsgInterpreter.h libs/messages/MsgInterpreter.cpp
				$(CC) $(CPPFLAGS) -c libs/messages/MsgInterpreter.cpp

#Protocol libs builder

COMMUNICATION_PROTOCOL_LIBS = HMAC.o BigEndianProtocol.o FormattedSocket.o 

FormattedSocket.o: Socket.o libs/communication_protocol/FormattedSocket.h libs/communication_protocol/FormattedSocket.cpp
		$(CC) $(CPPFLAGS) -c libs/communication_protocol/FormattedSocket.cpp

HMAC.o: libs/communication_protocol/HMAC.h libs/communication_protocol/HMAC.cpp
		$(CC) $(CPPFLAGS) -c libs/communication_protocol/HMAC.cpp

BigEndianProtocol.o: libs/communication_protocol/BigEndianProtocol.h libs/communication_protocol/BigEndianProtocol.cpp
		$(CC) $(CPPFLAGS) -c libs/communication_protocol/BigEndianProtocol.cpp

#Database builder

DATABASE_LIBS = Database.o MyDatabase.o

Database.o: libs/wrappers/Database.h libs/wrappers/Database.cpp
	$(CC) $(CPPFLAGS) -c libs/wrappers/Database.cpp
	
MyDatabase.o: libs/database/MyDatabase.h libs/database/MyDatabase.cpp
	$(CC) $(CPPFLAGS) -c libs/database/MyDatabase.cpp
	
#Server

SERVER_EXTERN = $(THREAD_LIBS) $(SOCKET_LIBS) $(MESSAGES_LIBS) $(COMMUNICATION_PROTOCOL_LIBS) $(DATABASE_LIBS)

SERVER_OBJ = $(SERVER_EXTERN) ClientAuthenticator.o ClientHandler.o ServerMsgInterpreter.o Room.o Lobby.o SocketHandler.o MatchMakingStrategy.o Server.o

SERVER_NAME = game-server

ClientAuthenticator.o: Server/client_communication/ClientAuthenticator.h Server/client_communication/ClientAuthenticator.cpp
	$(CC) $(CPPFLAGS) -c Server/client_communication/ClientAuthenticator.cpp

ClientHandler.o: Server/client_communication/ClientHandler.h Server/client_communication/ClientHandler.cpp
	$(CC) $(CPPFLAGS) -c Server/client_communication/ClientHandler.cpp
	
ServerMsgInterpreter.o: Server/client_communication/ServerMsgInterpreter.h Server/client_communication/ServerMsgInterpreter.cpp
	$(CC) $(CPPFLAGS) -c Server/client_communication/ServerMsgInterpreter.cpp
	
MatchMakingStrategy.o: 	Server/rooms/MatchMakingStrategy.h Server/rooms/MatchMakingStrategy.cpp
	$(CC) $(CPPFLAGS) -c Server/rooms/MatchMakingStrategy.cpp
	
Room.o: Server/rooms/Room.h Server/rooms/Room.cpp
	$(CC) $(CPPFLAGS) -c Server/rooms/Room.cpp	
	
Lobby.o: Server/rooms/Lobby.h Server/rooms/Lobby.cpp
	$(CC) $(CPPFLAGS) -c Server/rooms/Lobby.cpp	
	
SocketHandler.o: Server/SocketHandler.h Server/SocketHandler.cpp
	$(CC) $(CPPFLAGS) -c Server/SocketHandler.cpp

Server.o: Server/Server.h Server/Server.cpp
	$(CC) $(CPPFLAGS) -c Server/Server.cpp

main: Server/main.cpp $(SERVER_OBJ)
	$(CC) $(CPPFLAGS) $(SERVER_OBJ) Server/main.cpp -o $(SERVER_NAME) $(CPPLDFLAGS)

#Cleanup
clean:
	rm *.o $(SERVER_NAME)
	
#Run
run-server: main
	./$(SERVER_NAME)